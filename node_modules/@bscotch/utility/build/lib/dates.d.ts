export declare function isValidDate(date: Date): boolean;
/** @alias isValidDate */
export declare const dateIsValid: typeof isValidDate;
export declare function assertValidDate(date: Date): void;
/** @alias assertValidDate */
export declare const dateAssertIsValid: typeof assertValidDate;
/** Positive if date2 is in the past. */
export declare function dateDifferenceMillis(date1: Date, date2: Date): number;
/** Positive if date2 is in the past. */
export declare function dateDifferenceSeconds(date1: Date, date2: Date): number;
/** Positive if date2 is in the past. */
export declare function dateDifferenceMinutes(date1: Date, date2: Date): number;
/** Positive if date2 is in the past. */
export declare function dateDifferenceHours(date1: Date, date2: Date): number;
/** Positive if date2 is in the past. */
export declare function dateDifferenceDays(date1: Date, date2: Date): number;
export declare function dateIsOlderThanMillisAgo(date: Date, millisAgo: number): boolean;
export declare function dateIsOlderThanSecondsAgo(date: Date, secondsAgo: number): boolean;
export declare function dateIsOlderThanMinutesAgo(date: Date, minutes?: number): boolean;
export declare function dateIsOlderThanHoursAgo(date: Date, hours?: number): boolean;
export declare function dateIsOlderThanDaysAgo(date: Date, days?: number): boolean;
export declare function dateIsInTheFuture(date: Date): boolean;
export declare function dateIsInThePast(date: Date): boolean;
export declare function dateIsGreaterThan(date: Date, otherDate: Date): boolean;
export declare function dateIsLessThan(date: Date, otherDate: Date): boolean;
export declare function chronologySort(date1: Date, date2: Date): number;
/** @alias chronologySort */
export declare const dateSort: typeof chronologySort;
export declare function chronologySortReverse(date1: Date, date2: Date): number;
/** @alias chronologySortReverse */
export declare const dateSortDescending: typeof chronologySortReverse;
export declare const dates: {
    dateSort: typeof chronologySort;
    dateSortDescending: typeof chronologySortReverse;
    dateDifferenceMillis: typeof dateDifferenceMillis;
    dateDifferenceSeconds: typeof dateDifferenceSeconds;
    dateDifferenceMinutes: typeof dateDifferenceMinutes;
    dateDifferenceHours: typeof dateDifferenceHours;
    dateDifferenceDays: typeof dateDifferenceDays;
    dateIsGreaterThan: typeof dateIsGreaterThan;
    dateIsInTheFuture: typeof dateIsInTheFuture;
    dateIsInThePast: typeof dateIsInThePast;
    dateIsLessThan: typeof dateIsLessThan;
    dateIsOlderThanMillisAgo: typeof dateIsOlderThanMillisAgo;
    dateIsOlderThanSecondsAgo: typeof dateIsOlderThanSecondsAgo;
    dateIsOlderThanMinutesAgo: typeof dateIsOlderThanMinutesAgo;
    dateIsOlderThanHoursAgo: typeof dateIsOlderThanHoursAgo;
    dateIsOlderThanDaysAgo: typeof dateIsOlderThanDaysAgo;
    dateIsValid: typeof isValidDate;
    dateAssertIsValid: typeof assertValidDate;
    isValidDate: typeof isValidDate;
    assertValidDate: typeof assertValidDate;
    chronologySort: typeof chronologySort;
    chronologySortReverse: typeof chronologySortReverse;
};
//# sourceMappingURL=dates.d.ts.map